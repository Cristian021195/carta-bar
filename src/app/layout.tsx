import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Link from "next/link";
import { IconCake, IconCalendar, IconCart, IconDesign, IconFB, IconGlobal, IconGraduate, IconInstagram, IconMail, IconTel, IconWebsite } from "./components/icon";
import { Footer, Header } from "./components/layout";

const URL = "https://script.googleusercontent.com/macros/echo?user_content_key=R7PbLcg4yzjFQQf06NijMNqChC_lEmg0Y2DJifQIfZ73xzUaSUbkX_G0HzxUrBTdZ_gekL-dS09581Oqm9VHR4YhXfQsVQrzm5_BxDlH2jW0nuo2oDemN9CCS2h10ox_1xSncGQajx_ryfhECjZEnHBkZ1rJFrRPP9TLChpXEzl-kA93Maf3G5lb9wLYsPhcRboj9rFV3BJYuzZ_v9mL5ZGheVvkmmHSFLJvGn_h1RL7YtCg2Q99J9z9Jw9Md8uu&lib=MsqL6RZUfES4C4NMpj88n9BnUD_6pncia";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const res = await fetch(URL);
  const data = await res.json();
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased print:w-full bg-neutral-900 `}
      >
        <div className="bg-black px-2 py-4 fixed bottom-0 sm:hidden w-full uppercase text-white font-bold overflow-x-scroll">
          <ul className="flex text-nowrap gap-4">
            <Link href="/">INFORMACIÓN</Link>
            {data.data.map((item: { hoja: string }) => (
              <Link key={item.hoja} href={`./${item.hoja}`}>{item.hoja}</Link>
            ))}
          </ul>
        </div>
        <Header/>
        <main className="sm:w-1/2 mx-auto sm:my-20 my-4 px-4">
          <nav className="bg-[#DA5C26] p-4 font-bold text-gray-300 sm:flex justify-evenly my-10 [&>a]:uppercase print:hidden hidden">
              <Link href="/">INFORMACIÓN</Link>
              {data.data.map((item: { hoja: string }) => (
                <Link key={item.hoja} href={`./${item.hoja}`}>{item.hoja}</Link>
              ))}
          </nav>        
        {children}
        </main>
        <div className="bg-orange-700">
          <svg data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1200 50" preserveAspectRatio="none">
            <path fill="#171717" fillOpacity="1" d="M1200 0L0 50 0 0 1200 0 1200 120z" className="shape-fill"></path>
          </svg>
        </div>
        <Footer/>
      </body>
    </html>
  );
}
